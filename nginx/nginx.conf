worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Define custom log format for observability
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'upstream_status=$upstream_status '
                    'request_time=$request_time '
                    'upstream_response_time=$upstream_response_time '
                    'upstream_addr=$upstream_addr '
                    'pool=$upstream_http_x_app_pool '
                    'release=$upstream_http_x_release_id';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Define upstreams for Blue and Green apps
    upstream blue_upstream {
        server app_blue:${PORT} max_fails=2 fail_timeout=5s;
    }

    upstream green_upstream {
        server app_green:${PORT} backup;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /healthz {
            return 200 'healthy\n';
        }

        # Main route proxying
        location / {
            proxy_pass http://blue_upstream;

            # Failover handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Ensure headers from upstream are forwarded unchanged
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;

            proxy_connect_timeout 1s;
            proxy_read_timeout 2s;
            proxy_send_timeout 2s;
        }
    }
}

